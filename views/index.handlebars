
<h1>Restaurants</h1>

<div class="row" style="position: relative;">
    <div id="map_canvas" class="col-lg-10 img-rounded">

    </div>
    <!--<img src="/images/overmap.jpg" style="position: absolute;top:0;left:0;">-->
</div>

<script src="/javascripts/jquery.ui.map.min.js"></script>
<!--<script src="/javascripts/marker.with.label.min.js"></script>-->
<script type="text/javascript">
    var overlay;
    USGSOverlay.prototype = new google.maps.OverlayView();

    function initialize() {
        var mapOptions = {
            zoom: 11,
            center: new google.maps.LatLng(48.858887, 2.347425),
            disableDefaultUI: true,
            navigationControl: false,
            mapTypeControl: false,
            scaleControl: false,
            panControl: false,
            zoomControl: false,
            disableDoubleClickZoom: true,
            draggable: false
        };
        var srcImage = "/images/overmap.jpg";

        var map = new google.maps.Map(document.getElementById('map_canvas'),
                mapOptions);

        var goldStar = {
            path: 'M 125,5 155,90 245,90 175,145 200,230 125,180 50,230 75,145 5,90 95,90 z',
            fillColor: 'yellow',
            fillOpacity: 0.8,
            scale: 1,
            strokeColor: 'gold',
            strokeWeight: 14
        };

        {{#each restaurants}}
            var marker = new google.maps.Marker({
                position: new google.maps.LatLng({{latitude}}, {{longitude}}),
                //icon: goldStar,
                map: map
            });
        {{/each}}



        var swBound = new google.maps.LatLng(48.82023, 2.20967);
        var neBound = new google.maps.LatLng(48.90605, 2.43077);
        var bounds = new google.maps.LatLngBounds(swBound, neBound);

        overlay = new USGSOverlay(bounds, srcImage, map);
    }

    function USGSOverlay(bounds, image, map) {

        // Initialize all properties.
        this.bounds_ = bounds;
        this.image_ = image;
        this.map_ = map;

        // Define a property to hold the image's div. We'll
        // actually create this div upon receipt of the onAdd()
        // method so we'll leave it null for now.
        this.div_ = null;

        // Explicitly call setMap on this overlay.
        this.setMap(map);
    }

    USGSOverlay.prototype.onAdd = function() {

        var div = document.createElement('div');
        div.style.borderStyle = 'none';
        div.style.borderWidth = '0px';
        div.style.position = 'absolute';

        // Create the img element and attach it to the div.
        var img = document.createElement('img');
        img.src = this.image_;
        img.style.width = '100%';
        img.style.height = '100%';
        img.style.position = 'absolute';
        div.appendChild(img);

        this.div_ = div;

        // Add the element to the "overlayLayer" pane.
        var panes = this.getPanes();
        panes.overlayLayer.appendChild(div);
    };

    USGSOverlay.prototype.draw = function() {

        // We use the south-west and north-east
        // coordinates of the overlay to peg it to the correct position and size.
        // To do this, we need to retrieve the projection from the overlay.
        var overlayProjection = this.getProjection();

        // Retrieve the south-west and north-east coordinates of this overlay
        // in LatLngs and convert them to pixel coordinates.
        // We'll use these coordinates to resize the div.
        var sw = overlayProjection.fromLatLngToDivPixel(this.bounds_.getSouthWest());
        var ne = overlayProjection.fromLatLngToDivPixel(this.bounds_.getNorthEast());

        // Resize the image's div to fit the indicated dimensions.
        var div = this.div_;
        div.style.left = sw.x + 'px';
        div.style.top = ne.y + 'px';
        div.style.width = (ne.x - sw.x) + 'px';
        div.style.height = (sw.y - ne.y) + 'px';
    };

    // The onRemove() method will be called automatically from the API if
    // we ever set the overlay's map property to 'null'.
    USGSOverlay.prototype.onRemove = function() {
        this.div_.parentNode.removeChild(this.div_);
        this.div_ = null;
    };

    google.maps.event.addDomListener(window, 'load', initialize);

</script>
